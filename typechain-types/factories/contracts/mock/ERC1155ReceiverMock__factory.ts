/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC1155ReceiverMock,
  ERC1155ReceiverMockInterface,
} from "../../../contracts/mock/ERC1155ReceiverMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "recRetval",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "batRetval",
        type: "bytes4",
      },
      {
        internalType: "enum ERC1155ReceiverMock.RevertType",
        name: "error",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "CustomError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "BatchReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516109dd3803806109dd83398101604081905261002f91610092565b6001600160e01b0319808416608052821660a052806004811115610055576100556100dd565b60c0816004811115610069576100696100dd565b815250505050506100f3565b80516001600160e01b03198116811461008d57600080fd5b919050565b6000806000606084860312156100a757600080fd5b6100b084610075565b92506100be60208501610075565b91506040840151600581106100d257600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b60805160a05160c05161087d6101606000396000818160c401528181610102015281816101a00152818161021e015281816102dd0152818161031b015281816103ae015261042c015260006102ac0152600081816101ed015281816103fb01526104b6015261087d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461007f578063f23a6e61146100ab575b600080fd5b61006a6100543660046104df565b6001600160e01b0319166301ffc9a760e01b1490565b60405190151581526020015b60405180910390f35b61009261008d3660046105ba565b6100be565b6040516001600160e01b03199091168152602001610076565b6100926100b9366004610681565b6102d7565b600060017f000000000000000000000000000000000000000000000000000000000000000060048111156100f4576100f46106f9565b036100fe57600080fd5b60027f00000000000000000000000000000000000000000000000000000000000000006004811115610132576101326106f9565b0361019c5760405162461bcd60e51b815260206004820152602f60248201527f4552433131353552656365697665724d6f636b3a20726576657274696e67206f60448201526e6e206261746368207265636569766560881b60648201526084015b60405180910390fd5b60037f000000000000000000000000000000000000000000000000000000000000000060048111156101d0576101d06106f9565b0361021a576040516301990d6f60e61b81526001600160e01b03197f0000000000000000000000000000000000000000000000000000000000000000166004820152602401610193565b60047f0000000000000000000000000000000000000000000000000000000000000000600481111561024e5761024e6106f9565b0361026257600061025f818061070f565b50505b7f0bcad9224ba33b574e9c85298de2f44b4c80015a21aa5df474896444909863d889898989898989895a6040516102a19998979695949392919061078c565b60405180910390a1507f000000000000000000000000000000000000000000000000000000000000000098975050505050505050565b600060017f0000000000000000000000000000000000000000000000000000000000000000600481111561030d5761030d6106f9565b0361031757600080fd5b60027f0000000000000000000000000000000000000000000000000000000000000000600481111561034b5761034b6106f9565b036103aa5760405162461bcd60e51b815260206004820152602960248201527f4552433131353552656365697665724d6f636b3a20726576657274696e67206f6044820152686e207265636569766560b81b6064820152608401610193565b60037f000000000000000000000000000000000000000000000000000000000000000060048111156103de576103de6106f9565b03610428576040516301990d6f60e61b81526001600160e01b03197f0000000000000000000000000000000000000000000000000000000000000000166004820152602401610193565b60047f0000000000000000000000000000000000000000000000000000000000000000600481111561045c5761045c6106f9565b0361047057600061046d818061070f565b50505b7f20dfa9f79060c8c4d7fe892c97c71bcf6e3b63d1dcf66fea7aefc0211628cf298787878787875a6040516104ab97969594939291906107f8565b60405180910390a1507f00000000000000000000000000000000000000000000000000000000000000009695505050505050565b6000602082840312156104f157600080fd5b81356001600160e01b03198116811461050957600080fd5b9392505050565b80356001600160a01b038116811461052757600080fd5b919050565b60008083601f84011261053e57600080fd5b50813567ffffffffffffffff81111561055657600080fd5b6020830191508360208260051b850101111561057157600080fd5b9250929050565b60008083601f84011261058a57600080fd5b50813567ffffffffffffffff8111156105a257600080fd5b60208301915083602082850101111561057157600080fd5b60008060008060008060008060a0898b0312156105d657600080fd5b6105df89610510565b97506105ed60208a01610510565b9650604089013567ffffffffffffffff81111561060957600080fd5b6106158b828c0161052c565b909750955050606089013567ffffffffffffffff81111561063557600080fd5b6106418b828c0161052c565b909550935050608089013567ffffffffffffffff81111561066157600080fd5b61066d8b828c01610578565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561069a57600080fd5b6106a387610510565b95506106b160208801610510565b94506040870135935060608701359250608087013567ffffffffffffffff8111156106db57600080fd5b6106e789828a01610578565b979a9699509497509295939492505050565b634e487b7160e01b600052602160045260246000fd5b60008261072c57634e487b7160e01b600052601260045260246000fd5b500490565b81835260006001600160fb1b0383111561074a57600080fd5b8260051b80836020870137939093016020019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038a811682528916602082015260c0604082018190526000906107b9908301898b610731565b82810360608401526107cc81888a610731565b905082810360808401526107e1818688610763565b9150508260a08301529a9950505050505050505050565b6001600160a01b03888116825287166020820152604081018690526060810185905260c0608082018190526000906108339083018587610763565b90508260a08301529897505050505050505056fea26469706673582212209ecab177fba1798ee73e82a4518d7b8f69609ce2b230ecc3598a2396ad56f4a064736f6c634300081b0033";

type ERC1155ReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155ReceiverMock__factory extends ContractFactory {
  constructor(...args: ERC1155ReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    recRetval: BytesLike,
    batRetval: BytesLike,
    error: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      recRetval,
      batRetval,
      error,
      overrides || {}
    );
  }
  override deploy(
    recRetval: BytesLike,
    batRetval: BytesLike,
    error: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      recRetval,
      batRetval,
      error,
      overrides || {}
    ) as Promise<
      ERC1155ReceiverMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ERC1155ReceiverMock__factory {
    return super.connect(runner) as ERC1155ReceiverMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155ReceiverMockInterface {
    return new Interface(_abi) as ERC1155ReceiverMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155ReceiverMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC1155ReceiverMock;
  }
}
